Небольшая заметка:
1. Можно для удобства делать замену чисел на буквы для последующего удобства
Пример:
Две четные и две нечетные цифры не могут стоять рядом. МОЖНО ЗАМЕНИТЬ ЧЕТНЫЕ НА БУКВУ Ч, А НЕЧЕТНЫЕ НА Н.

2. Строка типа а[0] != a[1] != a[2] ... НЕ РАБОТАЕТ.
ДЛя меня лично удобнее сильно через count, но также можно сделать set и сравнить длину строки с длиной setа.




Условие:
https://3.shkolkovo.online/catalog/4425/6205?SubjectId=30
Решение:
from itertools import *

t = product("НРДО", repeat=4)

for k, i in enumerate(t):
    if ''.join(i) == 'ДРОН':
        print(k + 1)  # тк нумерация с 0

Условие:
Определите количество пятизначных чисел, записанных в девятеричной системе счисления,
в записи которых ровно одна цифра 3, при этом никакая из цифр 5, 6, 7, 8 не стоит рядом с цифрой 3.
Ответ:
6400
Решение:
def f(n, b):
    fin = ''
    numeric = '0123456789'
    while n > 0:
        fin = numeric[n % b] + fin
        n //= b
    return fin
count = 0
for i in range(9 ** 4, 9 ** 5):
    a = f(i, 9)
    if str(a).count('3') == 1 and '53' not in a and '53' not in a and\
        '63' not in a and '73' not in a and '83' not in a and '35' not in a and \
            '36' not in a and '37' not in a and '38' not in a:
        count += 1

print(count)

Условие:
https://3.shkolkovo.online/catalog/4426/85067
Решение:
from itertools import product

count = 0
a = 'КРОВАТЬ'
ls = list(product(a, repeat=5))
for i in ls:
    if i.count('Р') <= 4 and (len(i) - i.count('Р') + 1 == len(set(i))):
        print(i)
        count += 1

print(count)

Условие:
https://3.shkolkovo.online/catalog/4426/84848
Решение:
from itertools import permutations

count = 0
a = 'САПОГ'
ls = list(permutations(a))
for i in ls:
    s = ''.join(i)
    if ('СП' not in s) and ('ПС' not in s) and ('СГ' not in s) and ('ГС' not in s) and ("ПГ" not in s) and ('ГП' not in s) and ('ОА' not in s) and ("АО" not in s):
        count += 1

print(count)

Условие:
https://3.shkolkovo.online/catalog/4426/62641
Решение:
from itertools import permutations

didi = set()
a = 'ОБОРОНА'
sv = list(permutations(a))
for i in sv:
    s = ''.join(i)
    if 'ООО' in s or 'АОО' in s or 'ОАО' in s or 'ООА' in s:
        didi.add(s)
print(len(didi))

Условие:
https://3.shkolkovo.online/catalog/4426/62639
Решение:
from itertools import product

count = 0
a = 'УСЛОВИЕ'
ls = list(product(a, repeat=7))
for i in ls:
    s = ''.join(i)
    if s[0] != 'И' and s[-1] != 'О' and 'СЛ' not in s and 'ЛС' not in s and 'СВ' not in s and 'ВС' not in s and 'ЛВ' not in s and \
            'ВЛ' not in s and len(s) == len(set(s)):
        count += 1
print(count)

Условие:
https://3.shkolkovo.online/catalog/4426/62637
Решение:
from itertools import product

count = 0
a = 'КРУЖА'
ls = list(product(a, repeat=7))
for i in ls:
    st = ''.join(i)
    if (st.count('А') == 2 and st.count('У') == 0) or (st.count('А') == 1 and st.count('У') == 1) or \
            (st.count('А') == 0 and st.count('У') == 2):
        count += 1
print(count)

Условие:
https://3.shkolkovo.online/catalog/4426/85469

Решение:
from itertools import product

a = list(set(list(map(str, 'ВЕНИАМИН'))))
count = set()
lst = product(a, repeat=7)
for i in lst:
    st = ''.join(i)
    if (st[0] == st[2] and st[0] == st[4] and st[1] != st[0] and st[3] != st[2]) or \
            (st[1] == st[3] and st[1] == st[5] and st[2] != st[1] and st[4] != st[3]) or \
            (st[2] == st[4] and st[2] == st[6] and st[4] != st[3] and st[5] != st[2]):
        count.add(st)

print(len(count))

Условие:
https://3.shkolkovo.online/catalog/4426/85463
Решение:

def f(i):
    si = str(i)
    if int(si[-1]) % 2 == 0:
        a = list(map(lambda x: str(int(x) % 5), si))
        ja = ''.join(a)
        if '11' not in ja and '22' not in ja and '33' not in ja and '44' not in ja and '55' not in ja and \
                '00' not in ja and '66' not in ja and '77' not in ja and '88' not in ja and '99' not in ja:
            return 1
    return 0

print(sum(map(f, range(10000000, 100000000))))

Условие:
https://3.shkolkovo.online/catalog/4426/65603

Решение:
from itertools import permutations

line = 'УРШИКУ'
st = set()
for i in permutations(line):
    if i[0] != i[1] and i[1] != i[2] and i[2] != i[3] and i[3] != i[4] and i[4] != i[5]:
        st.add(''.join(i))
print(len(st))


Условие:
https://3.shkolkovo.online/catalog/4426/63510

Решение:
def f(n, base):
    fin = ''
    numeric = '0123456789'
    while n > 0:
        fin = numeric[n % base] + fin
        n //= base
    return fin


count = 0
for i in range(8 ** 6, 8 ** 7):
    si = str(f(i, 8))
    if len(set(si)) == len(si) and len(si) == 7:
        Flag = True
        for j in range(len(si) - 1):
            if (int(si[j]) % 2 == 0 and int(si[j + 1]) % 2 == 0) or \
                    (int(si[j]) % 2 != 0 and int(si[j + 1]) % 2 != 0):
                Flag = False
        if Flag:
            count += 1
print(count)
