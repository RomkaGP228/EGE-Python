Условие:
В файле 7.txt содержится последовательность целых чисел.
Элементы последовательности могут принимать целые значения от 0 до 10 000 включительно.
Определите количество троек, в которых хотя бы один из трёх элементов кратный 14 и
хотя бы один элемент меньше среднего арифметического всех чисел в файле.
В ответе запишите два числа через пробел: сначала количество найденных троек,
а затем – максимальную сумму элементов таких троек.
В данной задаче под тройкой подразумевается три идущих подряд элемента последовательности.

Решение:
data = open('files for 17/7_11.txt').read()
nums = list(map(int, data.split()))
bibi = sum(nums) / len(nums)
count = 0
lst = []
for i in range(len(nums) - 2):
    a, b, c = nums[i], nums[i + 1], nums[i + 2]
    if (a % 14 == 0 or b % 14 == 0 or c % 14 == 0) and \
            (a < bibi or b < bibi or c < bibi):
        count += 1
        lst.append(a + b + c)
print(count, max(lst))

Условие:
https://3.shkolkovo.online/catalog/4498/63200
Решение:
data = open('files for 17/3_17.txt').read()
nums = list(map(int, data.split()))
count = 0
lst = []
for i in range(len(nums) - 2):
    a, b, c = nums[i], nums[i + 1], nums[i + 2]
    if (a + b + c) % 3 == 0:
        if (a % 2 == 0 and b % 2 == 0) or (c % 2 == 0 and b % 2 == 0) or (a % 2 == 0 and c % 2 == 0):
            count += 1
            lst.append(a + b + c)
print(count, min(lst))

Условие:
https://3.shkolkovo.online/catalog/4498/58491
Решение:
data = open('files for 17/58491.txt').read()
nums = list(map(int, data.split()))
count = 0
lst = []
for i in range(len(nums) - 2):
    a, b, c = nums[i], nums[i + 1], nums[i + 2]
    k1 = hex(a)[-1] == '0'
    k2 = hex(b)[-1] == '0'
    k3 = hex(c)[-1] == '0'
    if (k1 + k2 + k3) >= 2:
        count += 1
        lst.append(max([a, b, c]))
print(count, sum(lst))

Условие:
https://3.shkolkovo.online/catalog/4498/52519
Решение:
data = open('files for 17/52519.txt').read()
nums = list(map(int, data.split()))
count = 0
lst = []
for i in range(len(nums) - 2):
    a, b, c = nums[i], nums[i + 1], nums[i + 2]
    ls = [a, b, c]
    mt = max(ls)
    if (a + b > c) or (a + c > b) or (b + c > a):
        ls = [a, b, c]
        mt = max(ls)
        ls.remove(mt)
        mit = min(ls)
        ls.remove(mit)
        met = ls[0]
        if met ** 2 + mit ** 2 > mt ** 2:
            count += 1
            lst.append(a + b + c)
print(str(count) + str(max(lst)))


Условие:
https://3.shkolkovo.online/catalog/4498/29822
Решение:
data = open('files for 17/dz 17-30.txt').read()
nums = list(map(int, data.split()))


def f(n, base):
    fin = ''
    numeric = '0123456789'
    while n > 0:
        fin = numeric[n % base] + fin
        n //= base
    return fin

bibi = list(filter(lambda x: x % 31 == 0, nums))
diddy = sum(bibi) / len(bibi)
count = 0
lst = []
for i in range(len(nums) - 2):
    a, b, c = nums[i], nums[i + 1], nums[i + 2]
    sa, sb, sc = list(map(int, str(a))), list(map(int, str(b))), list(map(int, str(c)))
    fifi = [sa[0] + sb[0] + sc[0], sa[1] + sb[1] + sc[1], sa[2] + sb[2] + sc[2], sa[3] + sb[3] + sc[3]]
    pal = f(sum(fifi), 5)
    if len(str(pal)) == 3:
        if str(pal)[0] == str(pal)[2] and ((a + b + c) / 3) > diddy:
            count += 1
            lst.append(a + b + c)
    if len(str(pal)) == 2:
        if str(pal)[0] == str(pal)[1] and ((a + b + c) / 3) > diddy:
            count += 1
            lst.append(a + b + c)

print(count, min(lst))
